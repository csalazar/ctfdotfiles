#!/bin/bash
#vim:syntax=shell

# Install antibody
if [[ ! -f /usr/local/bin/antibody ]]; then
  curl -sfL git.io/antibody | sh -s - -b /usr/local/bin
fi


echo "[+] Installing miniconda .."

arch=$(uname -m)
if [ "$arch" == "i686" ]; then
  miniconda=Miniconda3-latest-Linux-x86.sh
else
  miniconda=Miniconda3-latest-Linux-x86_64.sh
fi
echo "[+] Using $miniconda .."


if [[ ! -f $miniconda ]]; then
    cd $HOME
    wget --quiet https://repo.anaconda.com/miniconda/$miniconda
    chmod +x $miniconda
    ./$miniconda -b -p $HOME/miniconda3

    source miniconda3/bin/activate
    # development dependencies to run neovim without problems
    pip install pynvim black isort ipython
fi
echo "[+] Installation completed."

# To contribute to metasploit
echo "[+] Installing rbenv .."
if [[ ! -d $HOME/.rbenv ]]; then
  curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash
  export PATH=$HOME/.rbenv/bin:$PATH
  rbenv install 2.6.3
fi
echo "[+] Installation completed."

# Needed by vim-coc to install language servers
echo "[+] Installing nvm .."

nvm_dir=$HOME/.nvm/
if [[ ! -d $nvm_dir ]]; then
  mkdir $nvm_dir
  curl -sSo- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash

  source $nvm_dir/nvm.sh
  nvm install --lts --no-progress
  node install yarn -g
fi
echo "[+] Installation completed."

echo "[+] Installing neovim and its plugins .."
if command -v nvim >/dev/null 2>&1; then
  nvim -u $HOME/.config/nvim/config/01.plugins.vim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall' &> /dev/null
fi
echo "[+] Installation completed."
